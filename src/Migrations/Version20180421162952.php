<?php declare(strict_types = 1);

namespace DoctrineMigrations;

use Doctrine\DBAL\Migrations\AbstractMigration;
use Doctrine\DBAL\Schema\Schema;

/**
 * Auto-generated Migration: Please modify to your needs!
 */
class Version20180421162952 extends AbstractMigration
{
    public function up(Schema $schema)
    {
        // this up() migration is auto-generated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'sqlite', 'Migration can only be executed safely on \'sqlite\'.');

        $this->addSql('DROP INDEX IDX_68CD3612B03A8386');
        $this->addSql('DROP INDEX IDX_68CD3612EE85B337');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_offer AS SELECT id, created_by_id, last_changed_by_id, message, status, created_at, last_changed_at FROM event_offer');
        $this->addSql('DROP TABLE event_offer');
        $this->addSql('CREATE TABLE event_offer (id INTEGER NOT NULL, created_by_id INTEGER DEFAULT NULL, last_changed_by_id INTEGER DEFAULT NULL, message CLOB DEFAULT NULL COLLATE BINARY, status INTEGER NOT NULL, created_at DATETIME DEFAULT NULL, last_changed_at DATETIME DEFAULT NULL, PRIMARY KEY(id), CONSTRAINT FK_68CD3612B03A8386 FOREIGN KEY (created_by_id) REFERENCES frontend_user (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_68CD3612EE85B337 FOREIGN KEY (last_changed_by_id) REFERENCES frontend_user (id) NOT DEFERRABLE INITIALLY IMMEDIATE)');
        $this->addSql('INSERT INTO event_offer (id, created_by_id, last_changed_by_id, message, status, created_at, last_changed_at) SELECT id, created_by_id, last_changed_by_id, message, status, created_at, last_changed_at FROM __temp__event_offer');
        $this->addSql('DROP TABLE __temp__event_offer');
        $this->addSql('CREATE INDEX IDX_68CD3612B03A8386 ON event_offer (created_by_id)');
        $this->addSql('CREATE INDEX IDX_68CD3612EE85B337 ON event_offer (last_changed_by_id)');
        $this->addSql('DROP INDEX IDX_673E61767887A021');
        $this->addSql('DROP INDEX IDX_673E61767597D3FE');
        $this->addSql('CREATE TEMPORARY TABLE __temp__person_members AS SELECT frontend_user_id, member_id FROM person_members');
        $this->addSql('DROP TABLE person_members');
        $this->addSql('CREATE TABLE person_members (frontend_user_id INTEGER NOT NULL, member_id INTEGER NOT NULL, PRIMARY KEY(frontend_user_id, member_id), CONSTRAINT FK_673E61767887A021 FOREIGN KEY (frontend_user_id) REFERENCES frontend_user (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_673E61767597D3FE FOREIGN KEY (member_id) REFERENCES member (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE)');
        $this->addSql('INSERT INTO person_members (frontend_user_id, member_id) SELECT frontend_user_id, member_id FROM __temp__person_members');
        $this->addSql('DROP TABLE __temp__person_members');
        $this->addSql('CREATE INDEX IDX_673E61767887A021 ON person_members (frontend_user_id)');
        $this->addSql('CREATE INDEX IDX_673E61767597D3FE ON person_members (member_id)');
        $this->addSql('DROP INDEX IDX_3853319152A9D3E');
        $this->addSql('DROP INDEX IDX_385331971F7E88B');
        $this->addSql('DROP INDEX IDX_3853319AC7E9E21');
        $this->addSql('DROP INDEX IDX_38533194123A1D2');
        $this->addSql('DROP INDEX IDX_38533192058366E');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_offer_entry AS SELECT id, event_offer_id, event_id, target_frontend_user_id, target_member_id, event_offer_authorization_id FROM event_offer_entry');
        $this->addSql('DROP TABLE event_offer_entry');
        $this->addSql('CREATE TABLE event_offer_entry (id INTEGER NOT NULL, event_offer_id INTEGER DEFAULT NULL, event_id INTEGER DEFAULT NULL, target_frontend_user_id INTEGER DEFAULT NULL, target_member_id INTEGER DEFAULT NULL, event_offer_authorization_id INTEGER DEFAULT NULL, PRIMARY KEY(id), CONSTRAINT FK_3853319152A9D3E FOREIGN KEY (event_offer_id) REFERENCES event_offer (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_385331971F7E88B FOREIGN KEY (event_id) REFERENCES event (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_3853319AC7E9E21 FOREIGN KEY (target_frontend_user_id) REFERENCES frontend_user (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_38533194123A1D2 FOREIGN KEY (target_member_id) REFERENCES member (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_38533192058366E FOREIGN KEY (event_offer_authorization_id) REFERENCES event_offer_authorization (id) NOT DEFERRABLE INITIALLY IMMEDIATE)');
        $this->addSql('INSERT INTO event_offer_entry (id, event_offer_id, event_id, target_frontend_user_id, target_member_id, event_offer_authorization_id) SELECT id, event_offer_id, event_id, target_frontend_user_id, target_member_id, event_offer_authorization_id FROM __temp__event_offer_entry');
        $this->addSql('DROP TABLE __temp__event_offer_entry');
        $this->addSql('CREATE INDEX IDX_3853319152A9D3E ON event_offer_entry (event_offer_id)');
        $this->addSql('CREATE INDEX IDX_385331971F7E88B ON event_offer_entry (event_id)');
        $this->addSql('CREATE INDEX IDX_3853319AC7E9E21 ON event_offer_entry (target_frontend_user_id)');
        $this->addSql('CREATE INDEX IDX_38533194123A1D2 ON event_offer_entry (target_member_id)');
        $this->addSql('CREATE INDEX IDX_38533192058366E ON event_offer_entry (event_offer_authorization_id)');
        $this->addSql('DROP INDEX IDX_A86F737E7163DE68');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_generation_date_exception AS SELECT id, event_generation_id, event_type, start_date_time, end_date_time FROM event_generation_date_exception');
        $this->addSql('DROP TABLE event_generation_date_exception');
        $this->addSql('CREATE TABLE event_generation_date_exception (id INTEGER NOT NULL, event_generation_id INTEGER DEFAULT NULL, event_type INTEGER DEFAULT NULL, start_date_time DATETIME NOT NULL, end_date_time DATETIME NOT NULL, PRIMARY KEY(id), CONSTRAINT FK_A86F737E7163DE68 FOREIGN KEY (event_generation_id) REFERENCES event_generation (id) NOT DEFERRABLE INITIALLY IMMEDIATE)');
        $this->addSql('INSERT INTO event_generation_date_exception (id, event_generation_id, event_type, start_date_time, end_date_time) SELECT id, event_generation_id, event_type, start_date_time, end_date_time FROM __temp__event_generation_date_exception');
        $this->addSql('DROP TABLE __temp__event_generation_date_exception');
        $this->addSql('CREATE INDEX IDX_A86F737E7163DE68 ON event_generation_date_exception (event_generation_id)');
        $this->addSql('DROP INDEX IDX_8BC8B514B03A8386');
        $this->addSql('DROP INDEX IDX_8BC8B514EE85B337');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_generation AS SELECT id, created_by_id, last_changed_by_id, minimal_gap_between_events, start_cron_expression, end_cron_expression, differentiate_by_event_type, weekday_weight, saturday_weight, sunday_weight, holiday_weight, mind_previous_events, status, step, name, description, start_date_time, end_date_time, created_at, last_changed_at FROM event_generation');
        $this->addSql('DROP TABLE event_generation');
        $this->addSql('CREATE TABLE event_generation (id INTEGER NOT NULL, created_by_id INTEGER DEFAULT NULL, last_changed_by_id INTEGER DEFAULT NULL, minimal_gap_between_events NUMERIC(10, 0) NOT NULL, start_cron_expression CLOB NOT NULL COLLATE BINARY, end_cron_expression CLOB NOT NULL COLLATE BINARY, differentiate_by_event_type BOOLEAN NOT NULL, weekday_weight NUMERIC(10, 0) NOT NULL, saturday_weight NUMERIC(10, 0) NOT NULL, sunday_weight NUMERIC(10, 0) NOT NULL, holiday_weight NUMERIC(10, 0) NOT NULL, mind_previous_events BOOLEAN NOT NULL, status INTEGER NOT NULL, step INTEGER NOT NULL, name CLOB NOT NULL COLLATE BINARY, description CLOB DEFAULT NULL COLLATE BINARY, start_date_time DATETIME NOT NULL, end_date_time DATETIME NOT NULL, created_at DATETIME DEFAULT NULL, last_changed_at DATETIME DEFAULT NULL, PRIMARY KEY(id), CONSTRAINT FK_8BC8B514B03A8386 FOREIGN KEY (created_by_id) REFERENCES frontend_user (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_8BC8B514EE85B337 FOREIGN KEY (last_changed_by_id) REFERENCES frontend_user (id) NOT DEFERRABLE INITIALLY IMMEDIATE)');
        $this->addSql('INSERT INTO event_generation (id, created_by_id, last_changed_by_id, minimal_gap_between_events, start_cron_expression, end_cron_expression, differentiate_by_event_type, weekday_weight, saturday_weight, sunday_weight, holiday_weight, mind_previous_events, status, step, name, description, start_date_time, end_date_time, created_at, last_changed_at) SELECT id, created_by_id, last_changed_by_id, minimal_gap_between_events, start_cron_expression, end_cron_expression, differentiate_by_event_type, weekday_weight, saturday_weight, sunday_weight, holiday_weight, mind_previous_events, status, step, name, description, start_date_time, end_date_time, created_at, last_changed_at FROM __temp__event_generation');
        $this->addSql('DROP TABLE __temp__event_generation');
        $this->addSql('CREATE INDEX IDX_8BC8B514B03A8386 ON event_generation (created_by_id)');
        $this->addSql('CREATE INDEX IDX_8BC8B514EE85B337 ON event_generation (last_changed_by_id)');
        $this->addSql('DROP INDEX IDX_6882E71D7163DE68');
        $this->addSql('DROP INDEX IDX_6882E71D884B1443');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_generation_event_tags AS SELECT event_generation_id, event_tag_id FROM event_generation_event_tags');
        $this->addSql('DROP TABLE event_generation_event_tags');
        $this->addSql('CREATE TABLE event_generation_event_tags (event_generation_id INTEGER NOT NULL, event_tag_id INTEGER NOT NULL, PRIMARY KEY(event_generation_id, event_tag_id), CONSTRAINT FK_6882E71D7163DE68 FOREIGN KEY (event_generation_id) REFERENCES event_generation (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_6882E71D884B1443 FOREIGN KEY (event_tag_id) REFERENCES event_tag (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE)');
        $this->addSql('INSERT INTO event_generation_event_tags (event_generation_id, event_tag_id) SELECT event_generation_id, event_tag_id FROM __temp__event_generation_event_tags');
        $this->addSql('DROP TABLE __temp__event_generation_event_tags');
        $this->addSql('CREATE INDEX IDX_6882E71D7163DE68 ON event_generation_event_tags (event_generation_id)');
        $this->addSql('CREATE INDEX IDX_6882E71D884B1443 ON event_generation_event_tags (event_tag_id)');
        $this->addSql('DROP INDEX IDX_D161AF71152A9D3E');
        $this->addSql('DROP INDEX IDX_D161AF71D2EDD3FB');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_offer_authorization AS SELECT id, event_offer_id, signed_by_id, signature_status, decision_date_time FROM event_offer_authorization');
        $this->addSql('DROP TABLE event_offer_authorization');
        $this->addSql('CREATE TABLE event_offer_authorization (id INTEGER NOT NULL, event_offer_id INTEGER DEFAULT NULL, signed_by_id INTEGER DEFAULT NULL, signature_status INTEGER NOT NULL, decision_date_time DATETIME DEFAULT NULL, PRIMARY KEY(id), CONSTRAINT FK_D161AF71152A9D3E FOREIGN KEY (event_offer_id) REFERENCES event_offer (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_D161AF71D2EDD3FB FOREIGN KEY (signed_by_id) REFERENCES frontend_user (id) NOT DEFERRABLE INITIALLY IMMEDIATE)');
        $this->addSql('INSERT INTO event_offer_authorization (id, event_offer_id, signed_by_id, signature_status, decision_date_time) SELECT id, event_offer_id, signed_by_id, signature_status, decision_date_time FROM __temp__event_offer_authorization');
        $this->addSql('DROP TABLE __temp__event_offer_authorization');
        $this->addSql('CREATE INDEX IDX_D161AF71152A9D3E ON event_offer_authorization (event_offer_id)');
        $this->addSql('CREATE INDEX IDX_D161AF71D2EDD3FB ON event_offer_authorization (signed_by_id)');
        $this->addSql('DROP INDEX IDX_B37CB5C07597D3FE');
        $this->addSql('DROP INDEX IDX_B37CB5C07163DE68');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_generation_member AS SELECT id, member_id, event_generation_id, weight, generation_score, default_order FROM event_generation_member');
        $this->addSql('DROP TABLE event_generation_member');
        $this->addSql('CREATE TABLE event_generation_member (id INTEGER NOT NULL, member_id INTEGER DEFAULT NULL, event_generation_id INTEGER DEFAULT NULL, weight NUMERIC(10, 0) NOT NULL, generation_score NUMERIC(10, 0) DEFAULT NULL, default_order INTEGER NOT NULL, PRIMARY KEY(id), CONSTRAINT FK_B37CB5C07597D3FE FOREIGN KEY (member_id) REFERENCES member (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_B37CB5C07163DE68 FOREIGN KEY (event_generation_id) REFERENCES event_generation (id) NOT DEFERRABLE INITIALLY IMMEDIATE)');
        $this->addSql('INSERT INTO event_generation_member (id, member_id, event_generation_id, weight, generation_score, default_order) SELECT id, member_id, event_generation_id, weight, generation_score, default_order FROM __temp__event_generation_member');
        $this->addSql('DROP TABLE __temp__event_generation_member');
        $this->addSql('CREATE INDEX IDX_B37CB5C07597D3FE ON event_generation_member (member_id)');
        $this->addSql('CREATE INDEX IDX_B37CB5C07163DE68 ON event_generation_member (event_generation_id)');
        $this->addSql('DROP INDEX IDX_4FDF0D2C71F7E88B');
        $this->addSql('DROP INDEX IDX_4FDF0D2CB03A8386');
        $this->addSql('DROP INDEX IDX_4FDF0D2CEE85B337');
        $this->addSql('DROP INDEX IDX_4FDF0D2C7597D3FE');
        $this->addSql('DROP INDEX IDX_4FDF0D2C7887A021');
        $this->addSql('DROP INDEX IDX_4FDF0D2C1BDD81B');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_past AS SELECT id, event_id, created_by_id, last_changed_by_id, member_id, frontend_user_id, generated_by_id, event_change_type, created_at, last_changed_at, confirm_date_time, last_remainder_email_sent, trade_tag, event_type, start_date_time, end_date_time FROM event_past');
        $this->addSql('DROP TABLE event_past');
        $this->addSql('CREATE TABLE event_past (id INTEGER NOT NULL, event_id INTEGER DEFAULT NULL, created_by_id INTEGER DEFAULT NULL, last_changed_by_id INTEGER DEFAULT NULL, member_id INTEGER DEFAULT NULL, frontend_user_id INTEGER DEFAULT NULL, generated_by_id INTEGER DEFAULT NULL, confirmed_by_id INTEGER DEFAULT NULL, event_change_type INTEGER NOT NULL, created_at DATETIME DEFAULT NULL, last_changed_at DATETIME DEFAULT NULL, confirm_date_time DATETIME DEFAULT NULL, last_remainder_email_sent DATETIME DEFAULT NULL, trade_tag INTEGER NOT NULL, event_type INTEGER NOT NULL, start_date_time DATETIME NOT NULL, end_date_time DATETIME NOT NULL, PRIMARY KEY(id), CONSTRAINT FK_4FDF0D2C71F7E88B FOREIGN KEY (event_id) REFERENCES event (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_4FDF0D2CB03A8386 FOREIGN KEY (created_by_id) REFERENCES frontend_user (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_4FDF0D2CEE85B337 FOREIGN KEY (last_changed_by_id) REFERENCES frontend_user (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_4FDF0D2C6F45385D FOREIGN KEY (confirmed_by_id) REFERENCES frontend_user (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_4FDF0D2C7597D3FE FOREIGN KEY (member_id) REFERENCES member (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_4FDF0D2C7887A021 FOREIGN KEY (frontend_user_id) REFERENCES frontend_user (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_4FDF0D2C1BDD81B FOREIGN KEY (generated_by_id) REFERENCES event_generation (id) NOT DEFERRABLE INITIALLY IMMEDIATE)');
        $this->addSql('INSERT INTO event_past (id, event_id, created_by_id, last_changed_by_id, member_id, frontend_user_id, generated_by_id, event_change_type, created_at, last_changed_at, confirm_date_time, last_remainder_email_sent, trade_tag, event_type, start_date_time, end_date_time) SELECT id, event_id, created_by_id, last_changed_by_id, member_id, frontend_user_id, generated_by_id, event_change_type, created_at, last_changed_at, confirm_date_time, last_remainder_email_sent, trade_tag, event_type, start_date_time, end_date_time FROM __temp__event_past');
        $this->addSql('DROP TABLE __temp__event_past');
        $this->addSql('CREATE INDEX IDX_4FDF0D2C71F7E88B ON event_past (event_id)');
        $this->addSql('CREATE INDEX IDX_4FDF0D2CB03A8386 ON event_past (created_by_id)');
        $this->addSql('CREATE INDEX IDX_4FDF0D2CEE85B337 ON event_past (last_changed_by_id)');
        $this->addSql('CREATE INDEX IDX_4FDF0D2C7597D3FE ON event_past (member_id)');
        $this->addSql('CREATE INDEX IDX_4FDF0D2C7887A021 ON event_past (frontend_user_id)');
        $this->addSql('CREATE INDEX IDX_4FDF0D2C1BDD81B ON event_past (generated_by_id)');
        $this->addSql('CREATE UNIQUE INDEX UNIQ_4FDF0D2C6F45385D ON event_past (confirmed_by_id)');
        $this->addSql('DROP INDEX IDX_E545A0C5B03A8386');
        $this->addSql('DROP INDEX IDX_E545A0C5EE85B337');
        $this->addSql('CREATE TEMPORARY TABLE __temp__settings AS SELECT id, created_by_id, last_changed_by_id, support_mail, organisation_name, member_name, frontend_user_name, created_at, last_changed_at, confirm_days_advance FROM settings');
        $this->addSql('DROP TABLE settings');
        $this->addSql('CREATE TABLE settings (id INTEGER NOT NULL, created_by_id INTEGER DEFAULT NULL, last_changed_by_id INTEGER DEFAULT NULL, support_mail CLOB NOT NULL COLLATE BINARY, organisation_name CLOB NOT NULL COLLATE BINARY, member_name CLOB NOT NULL COLLATE BINARY, frontend_user_name CLOB NOT NULL COLLATE BINARY, created_at DATETIME DEFAULT NULL, last_changed_at DATETIME DEFAULT NULL, confirm_days_advance INTEGER NOT NULL, PRIMARY KEY(id), CONSTRAINT FK_E545A0C5B03A8386 FOREIGN KEY (created_by_id) REFERENCES frontend_user (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_E545A0C5EE85B337 FOREIGN KEY (last_changed_by_id) REFERENCES frontend_user (id) NOT DEFERRABLE INITIALLY IMMEDIATE)');
        $this->addSql('INSERT INTO settings (id, created_by_id, last_changed_by_id, support_mail, organisation_name, member_name, frontend_user_name, created_at, last_changed_at, confirm_days_advance) SELECT id, created_by_id, last_changed_by_id, support_mail, organisation_name, member_name, frontend_user_name, created_at, last_changed_at, confirm_days_advance FROM __temp__settings');
        $this->addSql('DROP TABLE __temp__settings');
        $this->addSql('CREATE INDEX IDX_E545A0C5B03A8386 ON settings (created_by_id)');
        $this->addSql('CREATE INDEX IDX_E545A0C5EE85B337 ON settings (last_changed_by_id)');
        $this->addSql('DROP INDEX IDX_663789AD7887A021');
        $this->addSql('DROP INDEX IDX_663789AD7163DE68');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_generation_frontend_user AS SELECT id, frontend_user_id, event_generation_id, weight, generation_score, default_order FROM event_generation_frontend_user');
        $this->addSql('DROP TABLE event_generation_frontend_user');
        $this->addSql('CREATE TABLE event_generation_frontend_user (id INTEGER NOT NULL, frontend_user_id INTEGER DEFAULT NULL, event_generation_id INTEGER DEFAULT NULL, weight NUMERIC(10, 0) NOT NULL, generation_score NUMERIC(10, 0) DEFAULT NULL, default_order INTEGER NOT NULL, PRIMARY KEY(id), CONSTRAINT FK_663789AD7887A021 FOREIGN KEY (frontend_user_id) REFERENCES frontend_user (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_663789AD7163DE68 FOREIGN KEY (event_generation_id) REFERENCES event_generation (id) NOT DEFERRABLE INITIALLY IMMEDIATE)');
        $this->addSql('INSERT INTO event_generation_frontend_user (id, frontend_user_id, event_generation_id, weight, generation_score, default_order) SELECT id, frontend_user_id, event_generation_id, weight, generation_score, default_order FROM __temp__event_generation_frontend_user');
        $this->addSql('DROP TABLE __temp__event_generation_frontend_user');
        $this->addSql('CREATE INDEX IDX_663789AD7887A021 ON event_generation_frontend_user (frontend_user_id)');
        $this->addSql('CREATE INDEX IDX_663789AD7163DE68 ON event_generation_frontend_user (event_generation_id)');
        $this->addSql('DROP INDEX IDX_3BAE0AA77597D3FE');
        $this->addSql('DROP INDEX IDX_3BAE0AA77887A021');
        $this->addSql('DROP INDEX IDX_3BAE0AA71BDD81B');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event AS SELECT id, member_id, frontend_user_id, generated_by_id, confirm_date_time, last_remainder_email_sent, trade_tag, event_type, start_date_time, end_date_time, deleted_at FROM event');
        $this->addSql('DROP TABLE event');
        $this->addSql('CREATE TABLE event (id INTEGER NOT NULL, member_id INTEGER DEFAULT NULL, frontend_user_id INTEGER DEFAULT NULL, generated_by_id INTEGER DEFAULT NULL, confirmed_by_id INTEGER DEFAULT NULL, confirm_date_time DATETIME DEFAULT NULL, last_remainder_email_sent DATETIME DEFAULT NULL, trade_tag INTEGER NOT NULL, event_type INTEGER NOT NULL, start_date_time DATETIME NOT NULL, end_date_time DATETIME NOT NULL, deleted_at DATETIME DEFAULT NULL, PRIMARY KEY(id), CONSTRAINT FK_3BAE0AA76F45385D FOREIGN KEY (confirmed_by_id) REFERENCES frontend_user (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_3BAE0AA77597D3FE FOREIGN KEY (member_id) REFERENCES member (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_3BAE0AA77887A021 FOREIGN KEY (frontend_user_id) REFERENCES frontend_user (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_3BAE0AA71BDD81B FOREIGN KEY (generated_by_id) REFERENCES event_generation (id) NOT DEFERRABLE INITIALLY IMMEDIATE)');
        $this->addSql('INSERT INTO event (id, member_id, frontend_user_id, generated_by_id, confirm_date_time, last_remainder_email_sent, trade_tag, event_type, start_date_time, end_date_time, deleted_at) SELECT id, member_id, frontend_user_id, generated_by_id, confirm_date_time, last_remainder_email_sent, trade_tag, event_type, start_date_time, end_date_time, deleted_at FROM __temp__event');
        $this->addSql('DROP TABLE __temp__event');
        $this->addSql('CREATE INDEX IDX_3BAE0AA77597D3FE ON event (member_id)');
        $this->addSql('CREATE INDEX IDX_3BAE0AA77887A021 ON event (frontend_user_id)');
        $this->addSql('CREATE INDEX IDX_3BAE0AA71BDD81B ON event (generated_by_id)');
        $this->addSql('CREATE UNIQUE INDEX UNIQ_3BAE0AA76F45385D ON event (confirmed_by_id)');
        $this->addSql('DROP INDEX IDX_289901A271F7E88B');
        $this->addSql('DROP INDEX IDX_289901A2884B1443');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_event_tags AS SELECT event_id, event_tag_id FROM event_event_tags');
        $this->addSql('DROP TABLE event_event_tags');
        $this->addSql('CREATE TABLE event_event_tags (event_id INTEGER NOT NULL, event_tag_id INTEGER NOT NULL, PRIMARY KEY(event_id, event_tag_id), CONSTRAINT FK_289901A271F7E88B FOREIGN KEY (event_id) REFERENCES event (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_289901A2884B1443 FOREIGN KEY (event_tag_id) REFERENCES event_tag (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE)');
        $this->addSql('INSERT INTO event_event_tags (event_id, event_tag_id) SELECT event_id, event_tag_id FROM __temp__event_event_tags');
        $this->addSql('DROP TABLE __temp__event_event_tags');
        $this->addSql('CREATE INDEX IDX_289901A271F7E88B ON event_event_tags (event_id)');
        $this->addSql('CREATE INDEX IDX_289901A2884B1443 ON event_event_tags (event_tag_id)');
    }

    public function down(Schema $schema)
    {
        // this down() migration is auto-generated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'sqlite', 'Migration can only be executed safely on \'sqlite\'.');

        $this->addSql('DROP INDEX UNIQ_3BAE0AA76F45385D');
        $this->addSql('DROP INDEX IDX_3BAE0AA77597D3FE');
        $this->addSql('DROP INDEX IDX_3BAE0AA77887A021');
        $this->addSql('DROP INDEX IDX_3BAE0AA71BDD81B');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event AS SELECT id, member_id, frontend_user_id, generated_by_id, confirm_date_time, last_remainder_email_sent, trade_tag, event_type, start_date_time, end_date_time, deleted_at FROM event');
        $this->addSql('DROP TABLE event');
        $this->addSql('CREATE TABLE event (id INTEGER NOT NULL, member_id INTEGER DEFAULT NULL, frontend_user_id INTEGER DEFAULT NULL, generated_by_id INTEGER DEFAULT NULL, confirm_date_time DATETIME DEFAULT NULL, last_remainder_email_sent DATETIME DEFAULT NULL, trade_tag INTEGER NOT NULL, event_type INTEGER NOT NULL, start_date_time DATETIME NOT NULL, end_date_time DATETIME NOT NULL, deleted_at DATETIME DEFAULT NULL, description CLOB DEFAULT NULL COLLATE BINARY, PRIMARY KEY(id))');
        $this->addSql('INSERT INTO event (id, member_id, frontend_user_id, generated_by_id, confirm_date_time, last_remainder_email_sent, trade_tag, event_type, start_date_time, end_date_time, deleted_at) SELECT id, member_id, frontend_user_id, generated_by_id, confirm_date_time, last_remainder_email_sent, trade_tag, event_type, start_date_time, end_date_time, deleted_at FROM __temp__event');
        $this->addSql('DROP TABLE __temp__event');
        $this->addSql('CREATE INDEX IDX_3BAE0AA77597D3FE ON event (member_id)');
        $this->addSql('CREATE INDEX IDX_3BAE0AA77887A021 ON event (frontend_user_id)');
        $this->addSql('CREATE INDEX IDX_3BAE0AA71BDD81B ON event (generated_by_id)');
        $this->addSql('DROP INDEX IDX_289901A271F7E88B');
        $this->addSql('DROP INDEX IDX_289901A2884B1443');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_event_tags AS SELECT event_id, event_tag_id FROM event_event_tags');
        $this->addSql('DROP TABLE event_event_tags');
        $this->addSql('CREATE TABLE event_event_tags (event_id INTEGER NOT NULL, event_tag_id INTEGER NOT NULL, PRIMARY KEY(event_id, event_tag_id))');
        $this->addSql('INSERT INTO event_event_tags (event_id, event_tag_id) SELECT event_id, event_tag_id FROM __temp__event_event_tags');
        $this->addSql('DROP TABLE __temp__event_event_tags');
        $this->addSql('CREATE INDEX IDX_289901A271F7E88B ON event_event_tags (event_id)');
        $this->addSql('CREATE INDEX IDX_289901A2884B1443 ON event_event_tags (event_tag_id)');
        $this->addSql('DROP INDEX IDX_8BC8B514B03A8386');
        $this->addSql('DROP INDEX IDX_8BC8B514EE85B337');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_generation AS SELECT id, created_by_id, last_changed_by_id, minimal_gap_between_events, start_cron_expression, end_cron_expression, differentiate_by_event_type, weekday_weight, saturday_weight, sunday_weight, holiday_weight, mind_previous_events, status, step, name, description, start_date_time, end_date_time, created_at, last_changed_at FROM event_generation');
        $this->addSql('DROP TABLE event_generation');
        $this->addSql('CREATE TABLE event_generation (id INTEGER NOT NULL, created_by_id INTEGER DEFAULT NULL, last_changed_by_id INTEGER DEFAULT NULL, minimal_gap_between_events NUMERIC(10, 0) NOT NULL, start_cron_expression CLOB NOT NULL, end_cron_expression CLOB NOT NULL, differentiate_by_event_type BOOLEAN NOT NULL, weekday_weight NUMERIC(10, 0) NOT NULL, saturday_weight NUMERIC(10, 0) NOT NULL, sunday_weight NUMERIC(10, 0) NOT NULL, holiday_weight NUMERIC(10, 0) NOT NULL, mind_previous_events BOOLEAN NOT NULL, status INTEGER NOT NULL, step INTEGER NOT NULL, name CLOB NOT NULL, description CLOB DEFAULT NULL, start_date_time DATETIME NOT NULL, end_date_time DATETIME NOT NULL, created_at DATETIME DEFAULT NULL, last_changed_at DATETIME DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('INSERT INTO event_generation (id, created_by_id, last_changed_by_id, minimal_gap_between_events, start_cron_expression, end_cron_expression, differentiate_by_event_type, weekday_weight, saturday_weight, sunday_weight, holiday_weight, mind_previous_events, status, step, name, description, start_date_time, end_date_time, created_at, last_changed_at) SELECT id, created_by_id, last_changed_by_id, minimal_gap_between_events, start_cron_expression, end_cron_expression, differentiate_by_event_type, weekday_weight, saturday_weight, sunday_weight, holiday_weight, mind_previous_events, status, step, name, description, start_date_time, end_date_time, created_at, last_changed_at FROM __temp__event_generation');
        $this->addSql('DROP TABLE __temp__event_generation');
        $this->addSql('CREATE INDEX IDX_8BC8B514B03A8386 ON event_generation (created_by_id)');
        $this->addSql('CREATE INDEX IDX_8BC8B514EE85B337 ON event_generation (last_changed_by_id)');
        $this->addSql('DROP INDEX IDX_A86F737E7163DE68');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_generation_date_exception AS SELECT id, event_generation_id, event_type, start_date_time, end_date_time FROM event_generation_date_exception');
        $this->addSql('DROP TABLE event_generation_date_exception');
        $this->addSql('CREATE TABLE event_generation_date_exception (id INTEGER NOT NULL, event_generation_id INTEGER DEFAULT NULL, event_type INTEGER DEFAULT NULL, start_date_time DATETIME NOT NULL, end_date_time DATETIME NOT NULL, PRIMARY KEY(id))');
        $this->addSql('INSERT INTO event_generation_date_exception (id, event_generation_id, event_type, start_date_time, end_date_time) SELECT id, event_generation_id, event_type, start_date_time, end_date_time FROM __temp__event_generation_date_exception');
        $this->addSql('DROP TABLE __temp__event_generation_date_exception');
        $this->addSql('CREATE INDEX IDX_A86F737E7163DE68 ON event_generation_date_exception (event_generation_id)');
        $this->addSql('DROP INDEX IDX_6882E71D7163DE68');
        $this->addSql('DROP INDEX IDX_6882E71D884B1443');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_generation_event_tags AS SELECT event_generation_id, event_tag_id FROM event_generation_event_tags');
        $this->addSql('DROP TABLE event_generation_event_tags');
        $this->addSql('CREATE TABLE event_generation_event_tags (event_generation_id INTEGER NOT NULL, event_tag_id INTEGER NOT NULL, PRIMARY KEY(event_generation_id, event_tag_id))');
        $this->addSql('INSERT INTO event_generation_event_tags (event_generation_id, event_tag_id) SELECT event_generation_id, event_tag_id FROM __temp__event_generation_event_tags');
        $this->addSql('DROP TABLE __temp__event_generation_event_tags');
        $this->addSql('CREATE INDEX IDX_6882E71D7163DE68 ON event_generation_event_tags (event_generation_id)');
        $this->addSql('CREATE INDEX IDX_6882E71D884B1443 ON event_generation_event_tags (event_tag_id)');
        $this->addSql('DROP INDEX IDX_663789AD7887A021');
        $this->addSql('DROP INDEX IDX_663789AD7163DE68');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_generation_frontend_user AS SELECT id, frontend_user_id, event_generation_id, weight, generation_score, default_order FROM event_generation_frontend_user');
        $this->addSql('DROP TABLE event_generation_frontend_user');
        $this->addSql('CREATE TABLE event_generation_frontend_user (id INTEGER NOT NULL, frontend_user_id INTEGER DEFAULT NULL, event_generation_id INTEGER DEFAULT NULL, weight NUMERIC(10, 0) NOT NULL, generation_score NUMERIC(10, 0) DEFAULT NULL, default_order INTEGER NOT NULL, PRIMARY KEY(id))');
        $this->addSql('INSERT INTO event_generation_frontend_user (id, frontend_user_id, event_generation_id, weight, generation_score, default_order) SELECT id, frontend_user_id, event_generation_id, weight, generation_score, default_order FROM __temp__event_generation_frontend_user');
        $this->addSql('DROP TABLE __temp__event_generation_frontend_user');
        $this->addSql('CREATE INDEX IDX_663789AD7887A021 ON event_generation_frontend_user (frontend_user_id)');
        $this->addSql('CREATE INDEX IDX_663789AD7163DE68 ON event_generation_frontend_user (event_generation_id)');
        $this->addSql('DROP INDEX IDX_B37CB5C07597D3FE');
        $this->addSql('DROP INDEX IDX_B37CB5C07163DE68');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_generation_member AS SELECT id, member_id, event_generation_id, weight, generation_score, default_order FROM event_generation_member');
        $this->addSql('DROP TABLE event_generation_member');
        $this->addSql('CREATE TABLE event_generation_member (id INTEGER NOT NULL, member_id INTEGER DEFAULT NULL, event_generation_id INTEGER DEFAULT NULL, weight NUMERIC(10, 0) NOT NULL, generation_score NUMERIC(10, 0) DEFAULT NULL, default_order INTEGER NOT NULL, PRIMARY KEY(id))');
        $this->addSql('INSERT INTO event_generation_member (id, member_id, event_generation_id, weight, generation_score, default_order) SELECT id, member_id, event_generation_id, weight, generation_score, default_order FROM __temp__event_generation_member');
        $this->addSql('DROP TABLE __temp__event_generation_member');
        $this->addSql('CREATE INDEX IDX_B37CB5C07597D3FE ON event_generation_member (member_id)');
        $this->addSql('CREATE INDEX IDX_B37CB5C07163DE68 ON event_generation_member (event_generation_id)');
        $this->addSql('DROP INDEX IDX_68CD3612B03A8386');
        $this->addSql('DROP INDEX IDX_68CD3612EE85B337');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_offer AS SELECT id, created_by_id, last_changed_by_id, message, status, created_at, last_changed_at FROM event_offer');
        $this->addSql('DROP TABLE event_offer');
        $this->addSql('CREATE TABLE event_offer (id INTEGER NOT NULL, created_by_id INTEGER DEFAULT NULL, last_changed_by_id INTEGER DEFAULT NULL, message CLOB DEFAULT NULL, status INTEGER NOT NULL, created_at DATETIME DEFAULT NULL, last_changed_at DATETIME DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('INSERT INTO event_offer (id, created_by_id, last_changed_by_id, message, status, created_at, last_changed_at) SELECT id, created_by_id, last_changed_by_id, message, status, created_at, last_changed_at FROM __temp__event_offer');
        $this->addSql('DROP TABLE __temp__event_offer');
        $this->addSql('CREATE INDEX IDX_68CD3612B03A8386 ON event_offer (created_by_id)');
        $this->addSql('CREATE INDEX IDX_68CD3612EE85B337 ON event_offer (last_changed_by_id)');
        $this->addSql('DROP INDEX IDX_D161AF71152A9D3E');
        $this->addSql('DROP INDEX IDX_D161AF71D2EDD3FB');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_offer_authorization AS SELECT id, event_offer_id, signed_by_id, signature_status, decision_date_time FROM event_offer_authorization');
        $this->addSql('DROP TABLE event_offer_authorization');
        $this->addSql('CREATE TABLE event_offer_authorization (id INTEGER NOT NULL, event_offer_id INTEGER DEFAULT NULL, signed_by_id INTEGER DEFAULT NULL, signature_status INTEGER NOT NULL, decision_date_time DATETIME DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('INSERT INTO event_offer_authorization (id, event_offer_id, signed_by_id, signature_status, decision_date_time) SELECT id, event_offer_id, signed_by_id, signature_status, decision_date_time FROM __temp__event_offer_authorization');
        $this->addSql('DROP TABLE __temp__event_offer_authorization');
        $this->addSql('CREATE INDEX IDX_D161AF71152A9D3E ON event_offer_authorization (event_offer_id)');
        $this->addSql('CREATE INDEX IDX_D161AF71D2EDD3FB ON event_offer_authorization (signed_by_id)');
        $this->addSql('DROP INDEX IDX_3853319152A9D3E');
        $this->addSql('DROP INDEX IDX_385331971F7E88B');
        $this->addSql('DROP INDEX IDX_3853319AC7E9E21');
        $this->addSql('DROP INDEX IDX_38533194123A1D2');
        $this->addSql('DROP INDEX IDX_38533192058366E');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_offer_entry AS SELECT id, event_offer_id, event_id, target_frontend_user_id, target_member_id, event_offer_authorization_id FROM event_offer_entry');
        $this->addSql('DROP TABLE event_offer_entry');
        $this->addSql('CREATE TABLE event_offer_entry (id INTEGER NOT NULL, event_offer_id INTEGER DEFAULT NULL, event_id INTEGER DEFAULT NULL, target_frontend_user_id INTEGER DEFAULT NULL, target_member_id INTEGER DEFAULT NULL, event_offer_authorization_id INTEGER DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('INSERT INTO event_offer_entry (id, event_offer_id, event_id, target_frontend_user_id, target_member_id, event_offer_authorization_id) SELECT id, event_offer_id, event_id, target_frontend_user_id, target_member_id, event_offer_authorization_id FROM __temp__event_offer_entry');
        $this->addSql('DROP TABLE __temp__event_offer_entry');
        $this->addSql('CREATE INDEX IDX_3853319152A9D3E ON event_offer_entry (event_offer_id)');
        $this->addSql('CREATE INDEX IDX_385331971F7E88B ON event_offer_entry (event_id)');
        $this->addSql('CREATE INDEX IDX_3853319AC7E9E21 ON event_offer_entry (target_frontend_user_id)');
        $this->addSql('CREATE INDEX IDX_38533194123A1D2 ON event_offer_entry (target_member_id)');
        $this->addSql('CREATE INDEX IDX_38533192058366E ON event_offer_entry (event_offer_authorization_id)');
        $this->addSql('DROP INDEX IDX_4FDF0D2C71F7E88B');
        $this->addSql('DROP INDEX IDX_4FDF0D2CB03A8386');
        $this->addSql('DROP INDEX IDX_4FDF0D2CEE85B337');
        $this->addSql('DROP INDEX UNIQ_4FDF0D2C6F45385D');
        $this->addSql('DROP INDEX IDX_4FDF0D2C7597D3FE');
        $this->addSql('DROP INDEX IDX_4FDF0D2C7887A021');
        $this->addSql('DROP INDEX IDX_4FDF0D2C1BDD81B');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_past AS SELECT id, event_id, created_by_id, last_changed_by_id, member_id, frontend_user_id, generated_by_id, event_change_type, created_at, last_changed_at, confirm_date_time, last_remainder_email_sent, trade_tag, event_type, start_date_time, end_date_time FROM event_past');
        $this->addSql('DROP TABLE event_past');
        $this->addSql('CREATE TABLE event_past (id INTEGER NOT NULL, event_id INTEGER DEFAULT NULL, created_by_id INTEGER DEFAULT NULL, last_changed_by_id INTEGER DEFAULT NULL, member_id INTEGER DEFAULT NULL, frontend_user_id INTEGER DEFAULT NULL, generated_by_id INTEGER DEFAULT NULL, event_change_type INTEGER NOT NULL, created_at DATETIME DEFAULT NULL, last_changed_at DATETIME DEFAULT NULL, confirm_date_time DATETIME DEFAULT NULL, last_remainder_email_sent DATETIME DEFAULT NULL, trade_tag INTEGER NOT NULL, event_type INTEGER NOT NULL, start_date_time DATETIME NOT NULL, end_date_time DATETIME NOT NULL, description CLOB DEFAULT NULL COLLATE BINARY, PRIMARY KEY(id))');
        $this->addSql('INSERT INTO event_past (id, event_id, created_by_id, last_changed_by_id, member_id, frontend_user_id, generated_by_id, event_change_type, created_at, last_changed_at, confirm_date_time, last_remainder_email_sent, trade_tag, event_type, start_date_time, end_date_time) SELECT id, event_id, created_by_id, last_changed_by_id, member_id, frontend_user_id, generated_by_id, event_change_type, created_at, last_changed_at, confirm_date_time, last_remainder_email_sent, trade_tag, event_type, start_date_time, end_date_time FROM __temp__event_past');
        $this->addSql('DROP TABLE __temp__event_past');
        $this->addSql('CREATE INDEX IDX_4FDF0D2C71F7E88B ON event_past (event_id)');
        $this->addSql('CREATE INDEX IDX_4FDF0D2CB03A8386 ON event_past (created_by_id)');
        $this->addSql('CREATE INDEX IDX_4FDF0D2CEE85B337 ON event_past (last_changed_by_id)');
        $this->addSql('CREATE INDEX IDX_4FDF0D2C7597D3FE ON event_past (member_id)');
        $this->addSql('CREATE INDEX IDX_4FDF0D2C7887A021 ON event_past (frontend_user_id)');
        $this->addSql('CREATE INDEX IDX_4FDF0D2C1BDD81B ON event_past (generated_by_id)');
        $this->addSql('DROP INDEX IDX_673E61767887A021');
        $this->addSql('DROP INDEX IDX_673E61767597D3FE');
        $this->addSql('CREATE TEMPORARY TABLE __temp__person_members AS SELECT frontend_user_id, member_id FROM person_members');
        $this->addSql('DROP TABLE person_members');
        $this->addSql('CREATE TABLE person_members (frontend_user_id INTEGER NOT NULL, member_id INTEGER NOT NULL, PRIMARY KEY(frontend_user_id, member_id))');
        $this->addSql('INSERT INTO person_members (frontend_user_id, member_id) SELECT frontend_user_id, member_id FROM __temp__person_members');
        $this->addSql('DROP TABLE __temp__person_members');
        $this->addSql('CREATE INDEX IDX_673E61767887A021 ON person_members (frontend_user_id)');
        $this->addSql('CREATE INDEX IDX_673E61767597D3FE ON person_members (member_id)');
        $this->addSql('DROP INDEX IDX_E545A0C5B03A8386');
        $this->addSql('DROP INDEX IDX_E545A0C5EE85B337');
        $this->addSql('CREATE TEMPORARY TABLE __temp__settings AS SELECT id, created_by_id, last_changed_by_id, support_mail, organisation_name, member_name, frontend_user_name, confirm_days_advance, created_at, last_changed_at FROM settings');
        $this->addSql('DROP TABLE settings');
        $this->addSql('CREATE TABLE settings (id INTEGER NOT NULL, created_by_id INTEGER DEFAULT NULL, last_changed_by_id INTEGER DEFAULT NULL, support_mail CLOB NOT NULL, organisation_name CLOB NOT NULL, member_name CLOB NOT NULL, frontend_user_name CLOB NOT NULL, confirm_days_advance INTEGER NOT NULL, created_at DATETIME DEFAULT NULL, last_changed_at DATETIME DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('INSERT INTO settings (id, created_by_id, last_changed_by_id, support_mail, organisation_name, member_name, frontend_user_name, confirm_days_advance, created_at, last_changed_at) SELECT id, created_by_id, last_changed_by_id, support_mail, organisation_name, member_name, frontend_user_name, confirm_days_advance, created_at, last_changed_at FROM __temp__settings');
        $this->addSql('DROP TABLE __temp__settings');
        $this->addSql('CREATE INDEX IDX_E545A0C5B03A8386 ON settings (created_by_id)');
        $this->addSql('CREATE INDEX IDX_E545A0C5EE85B337 ON settings (last_changed_by_id)');
    }
}
