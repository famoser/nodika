<?php declare(strict_types = 1);

namespace DoctrineMigrations;

use Doctrine\DBAL\Migrations\AbstractMigration;
use Doctrine\DBAL\Schema\Schema;

/**
 * Auto-generated Migration: Please modify to your needs!
 */
class Version20180410151239 extends AbstractMigration
{
    public function up(Schema $schema)
    {
        // this up() migration is auto-generated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'sqlite', 'Migration can only be executed safely on \'sqlite\'.');

        $this->addSql('CREATE TABLE event_generation_date_exception (id INTEGER NOT NULL, event_generation_id INTEGER DEFAULT NULL, event_type INTEGER DEFAULT NULL, start_date_time DATETIME NOT NULL, end_date_time DATETIME NOT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_A86F737E7163DE68 ON event_generation_date_exception (event_generation_id)');
        $this->addSql('CREATE TABLE event_generation (id INTEGER NOT NULL, event_line_id INTEGER DEFAULT NULL, created_by_id INTEGER DEFAULT NULL, last_changed_by_id INTEGER DEFAULT NULL, minimal_gap_between_events NUMERIC(10, 0) NOT NULL, start_cron_expression CLOB NOT NULL, end_cron_expression CLOB NOT NULL, differentiate_by_event_type BOOLEAN NOT NULL, weekday_weight NUMERIC(10, 0) NOT NULL, saturday_weight NUMERIC(10, 0) NOT NULL, sunday_weight NUMERIC(10, 0) NOT NULL, holiday_weight NUMERIC(10, 0) NOT NULL, mind_previous_events BOOLEAN NOT NULL, status INTEGER NOT NULL, step INTEGER NOT NULL, name CLOB NOT NULL, description CLOB DEFAULT NULL, start_date_time DATETIME NOT NULL, end_date_time DATETIME NOT NULL, created_at DATETIME DEFAULT NULL, last_changed_at DATETIME DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_8BC8B514C82CDCED ON event_generation (event_line_id)');
        $this->addSql('CREATE INDEX IDX_8BC8B514B03A8386 ON event_generation (created_by_id)');
        $this->addSql('CREATE INDEX IDX_8BC8B514EE85B337 ON event_generation (last_changed_by_id)');
        $this->addSql('CREATE TABLE event_offer_authorization (id INTEGER NOT NULL, event_offer_id INTEGER DEFAULT NULL, signed_by_id INTEGER DEFAULT NULL, signature_status INTEGER NOT NULL, decision_date_time DATETIME DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_D161AF71152A9D3E ON event_offer_authorization (event_offer_id)');
        $this->addSql('CREATE INDEX IDX_D161AF71D2EDD3FB ON event_offer_authorization (signed_by_id)');
        $this->addSql('CREATE TABLE event_generation_member (id INTEGER NOT NULL, member_id INTEGER DEFAULT NULL, event_generation_id INTEGER DEFAULT NULL, weight NUMERIC(10, 0) NOT NULL, generation_score NUMERIC(10, 0) DEFAULT NULL, default_order INTEGER NOT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_B37CB5C07597D3FE ON event_generation_member (member_id)');
        $this->addSql('CREATE INDEX IDX_B37CB5C07163DE68 ON event_generation_member (event_generation_id)');
        $this->addSql('CREATE TABLE event_generation_conflict_avoid (id INTEGER NOT NULL, event_line_id INTEGER DEFAULT NULL, event_generation_id INTEGER DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_4EBB93D8C82CDCED ON event_generation_conflict_avoid (event_line_id)');
        $this->addSql('CREATE INDEX IDX_4EBB93D87163DE68 ON event_generation_conflict_avoid (event_generation_id)');
        $this->addSql('CREATE TABLE settings (id INTEGER NOT NULL, created_by_id INTEGER DEFAULT NULL, last_changed_by_id INTEGER DEFAULT NULL, organisation_name CLOB NOT NULL, member_name CLOB NOT NULL, frontend_user_name CLOB NOT NULL, use_members BOOLEAN NOT NULL, created_at DATETIME DEFAULT NULL, last_changed_at DATETIME DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_E545A0C5B03A8386 ON settings (created_by_id)');
        $this->addSql('CREATE INDEX IDX_E545A0C5EE85B337 ON settings (last_changed_by_id)');
        $this->addSql('CREATE TABLE event_generation_frontend_user (id INTEGER NOT NULL, frontend_user_id INTEGER DEFAULT NULL, event_generation_id INTEGER DEFAULT NULL, weight NUMERIC(10, 0) NOT NULL, generation_score NUMERIC(10, 0) DEFAULT NULL, default_order INTEGER NOT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_663789AD7887A021 ON event_generation_frontend_user (frontend_user_id)');
        $this->addSql('CREATE INDEX IDX_663789AD7163DE68 ON event_generation_frontend_user (event_generation_id)');
        $this->addSql('DROP TABLE application_event');
        $this->addSql('DROP TABLE event_line_generation');
        $this->addSql('DROP TABLE invoice');
        $this->addSql('DROP TABLE newsletter');
        $this->addSql('DROP TABLE organisation');
        $this->addSql('DROP TABLE organisation_person');
        $this->addSql('DROP TABLE organisation_setting');
        $this->addSql('DROP TABLE person');
        $this->addSql('DROP TABLE setting');
        $this->addSql('DROP INDEX IDX_68CD36123D1B60F4');
        $this->addSql('DROP INDEX IDX_68CD361269F7084D');
        $this->addSql('DROP INDEX IDX_68CD3612987D2660');
        $this->addSql('DROP INDEX IDX_68CD3612CC914ED9');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_offer AS SELECT id, description, status FROM event_offer');
        $this->addSql('DROP TABLE event_offer');
        $this->addSql('CREATE TABLE event_offer (id INTEGER NOT NULL, created_by_id INTEGER DEFAULT NULL, last_changed_by_id INTEGER DEFAULT NULL, status INTEGER NOT NULL, message CLOB DEFAULT NULL, created_at DATETIME DEFAULT NULL, last_changed_at DATETIME DEFAULT NULL, PRIMARY KEY(id), CONSTRAINT FK_68CD3612B03A8386 FOREIGN KEY (created_by_id) REFERENCES frontend_user (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_68CD3612EE85B337 FOREIGN KEY (last_changed_by_id) REFERENCES frontend_user (id) NOT DEFERRABLE INITIALLY IMMEDIATE)');
        $this->addSql('INSERT INTO event_offer (id, message, status) SELECT id, description, status FROM __temp__event_offer');
        $this->addSql('DROP TABLE __temp__event_offer');
        $this->addSql('CREATE INDEX IDX_68CD3612B03A8386 ON event_offer (created_by_id)');
        $this->addSql('CREATE INDEX IDX_68CD3612EE85B337 ON event_offer (last_changed_by_id)');
        $this->addSql('DROP INDEX UNIQ_E2D1DEA217BBB47');
        $this->addSql('DROP INDEX UNIQ_E2D1DEAE7927C74');
        $this->addSql('CREATE TEMPORARY TABLE __temp__frontend_user AS SELECT id, person_id, deleted_at, email, password_hash, reset_hash, is_active, registration_date, agb_accepted FROM frontend_user');
        $this->addSql('DROP TABLE frontend_user');
        $this->addSql('CREATE TABLE frontend_user (id INTEGER NOT NULL, deleted_at DATETIME DEFAULT NULL, email CLOB NOT NULL COLLATE BINARY, password_hash CLOB NOT NULL COLLATE BINARY, reset_hash CLOB NOT NULL COLLATE BINARY, registration_date DATETIME NOT NULL, agb_accepted BOOLEAN DEFAULT \'0\' NOT NULL, is_administrator BOOLEAN NOT NULL, postal_code INTEGER DEFAULT NULL, is_enabled BOOLEAN NOT NULL, invitation_identifier CLOB DEFAULT NULL, job_title CLOB DEFAULT NULL, given_name CLOB NOT NULL, family_name CLOB NOT NULL, street CLOB DEFAULT NULL, street_nr CLOB DEFAULT NULL, address_line CLOB DEFAULT NULL, city CLOB DEFAULT NULL, country CLOB DEFAULT NULL, phone CLOB DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('INSERT INTO frontend_user (id, postal_code, deleted_at, email, password_hash, reset_hash, is_administrator, registration_date, agb_accepted) SELECT id, person_id, deleted_at, email, password_hash, reset_hash, is_active, registration_date, agb_accepted FROM __temp__frontend_user');
        $this->addSql('DROP TABLE __temp__frontend_user');
        $this->addSql('CREATE UNIQUE INDEX UNIQ_E2D1DEAE7927C74 ON frontend_user (email)');
        $this->addSql('DROP INDEX IDX_673E61767597D3FE');
        $this->addSql('DROP INDEX IDX_673E6176217BBB47');
        $this->addSql('CREATE TEMPORARY TABLE __temp__person_members AS SELECT person_id, member_id FROM person_members');
        $this->addSql('DROP TABLE person_members');
        $this->addSql('CREATE TABLE person_members (member_id INTEGER NOT NULL, frontend_user_id INTEGER NOT NULL, PRIMARY KEY(frontend_user_id, member_id), CONSTRAINT FK_673E61767887A021 FOREIGN KEY (frontend_user_id) REFERENCES frontend_user (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_673E61767597D3FE FOREIGN KEY (member_id) REFERENCES member (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE)');
        $this->addSql('INSERT INTO person_members (frontend_user_id, member_id) SELECT person_id, member_id FROM __temp__person_members');
        $this->addSql('DROP TABLE __temp__person_members');
        $this->addSql('CREATE INDEX IDX_673E61767597D3FE ON person_members (member_id)');
        $this->addSql('CREATE INDEX IDX_673E61767887A021 ON person_members (frontend_user_id)');
        $this->addSql('DROP INDEX IDX_385331971F7E88B');
        $this->addSql('DROP INDEX IDX_3853319152A9D3E');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_offer_entry AS SELECT id, event_offer_id, event_id FROM event_offer_entry');
        $this->addSql('DROP TABLE event_offer_entry');
        $this->addSql('CREATE TABLE event_offer_entry (id INTEGER NOT NULL, event_offer_id INTEGER DEFAULT NULL, event_id INTEGER DEFAULT NULL, target_frontend_user_id INTEGER DEFAULT NULL, target_member_id INTEGER DEFAULT NULL, event_offer_authorization_id INTEGER DEFAULT NULL, PRIMARY KEY(id), CONSTRAINT FK_3853319152A9D3E FOREIGN KEY (event_offer_id) REFERENCES event_offer (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_385331971F7E88B FOREIGN KEY (event_id) REFERENCES event (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_3853319AC7E9E21 FOREIGN KEY (target_frontend_user_id) REFERENCES frontend_user (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_38533194123A1D2 FOREIGN KEY (target_member_id) REFERENCES member (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_38533192058366E FOREIGN KEY (event_offer_authorization_id) REFERENCES event_offer_authorization (id) NOT DEFERRABLE INITIALLY IMMEDIATE)');
        $this->addSql('INSERT INTO event_offer_entry (id, event_offer_id, event_id) SELECT id, event_offer_id, event_id FROM __temp__event_offer_entry');
        $this->addSql('DROP TABLE __temp__event_offer_entry');
        $this->addSql('CREATE INDEX IDX_385331971F7E88B ON event_offer_entry (event_id)');
        $this->addSql('CREATE INDEX IDX_3853319152A9D3E ON event_offer_entry (event_offer_id)');
        $this->addSql('CREATE INDEX IDX_3853319AC7E9E21 ON event_offer_entry (target_frontend_user_id)');
        $this->addSql('CREATE INDEX IDX_38533194123A1D2 ON event_offer_entry (target_member_id)');
        $this->addSql('CREATE INDEX IDX_38533192058366E ON event_offer_entry (event_offer_authorization_id)');
        $this->addSql('CREATE TEMPORARY TABLE __temp__email AS SELECT id, receiver, identifier, subject, body, action_text, action_link, carbon_copy, email_type, sent_date_time, visited_date_time FROM email');
        $this->addSql('DROP TABLE email');
        $this->addSql('CREATE TABLE email (id INTEGER NOT NULL, receiver CLOB NOT NULL COLLATE BINARY, identifier CLOB NOT NULL COLLATE BINARY, subject CLOB NOT NULL COLLATE BINARY, body CLOB NOT NULL COLLATE BINARY, action_text CLOB DEFAULT NULL COLLATE BINARY, action_link CLOB DEFAULT NULL COLLATE BINARY, carbon_copy CLOB DEFAULT NULL COLLATE BINARY, email_type INTEGER NOT NULL, sent_date_time DATETIME NOT NULL, visited_date_time DATETIME DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('INSERT INTO email (id, receiver, identifier, subject, body, action_text, action_link, carbon_copy, email_type, sent_date_time, visited_date_time) SELECT id, receiver, identifier, subject, body, action_text, action_link, carbon_copy, email_type, sent_date_time, visited_date_time FROM __temp__email');
        $this->addSql('DROP TABLE __temp__email');
        $this->addSql('DROP INDEX IDX_4FDF0D2C71F7E88B');
        $this->addSql('DROP INDEX IDX_4FDF0D2C17ECF0EB');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_past AS SELECT id, changed_by_person_id, event_id, changed_at_date_time, event_change_type, deleted_at FROM event_past');
        $this->addSql('DROP TABLE event_past');
        $this->addSql('CREATE TABLE event_past (id INTEGER NOT NULL, event_id INTEGER DEFAULT NULL, created_by_id INTEGER DEFAULT NULL, last_changed_by_id INTEGER DEFAULT NULL, member_id INTEGER DEFAULT NULL, frontend_user_id INTEGER DEFAULT NULL, event_line_id INTEGER DEFAULT NULL, generated_by_id INTEGER DEFAULT NULL, event_change_type INTEGER NOT NULL, created_at DATETIME DEFAULT NULL, start_date_time DATETIME NOT NULL, last_changed_at DATETIME DEFAULT NULL, confirm_date_time DATETIME DEFAULT NULL, last_remainder_email_sent DATETIME DEFAULT NULL, trade_tag INTEGER NOT NULL, event_type INTEGER NOT NULL, end_date_time DATETIME NOT NULL, PRIMARY KEY(id), CONSTRAINT FK_4FDF0D2C71F7E88B FOREIGN KEY (event_id) REFERENCES event (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_4FDF0D2CB03A8386 FOREIGN KEY (created_by_id) REFERENCES frontend_user (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_4FDF0D2CEE85B337 FOREIGN KEY (last_changed_by_id) REFERENCES frontend_user (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_4FDF0D2C7597D3FE FOREIGN KEY (member_id) REFERENCES member (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_4FDF0D2C7887A021 FOREIGN KEY (frontend_user_id) REFERENCES frontend_user (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_4FDF0D2CC82CDCED FOREIGN KEY (event_line_id) REFERENCES event_line (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_4FDF0D2C1BDD81B FOREIGN KEY (generated_by_id) REFERENCES event_generation (id) NOT DEFERRABLE INITIALLY IMMEDIATE)');
        $this->addSql('INSERT INTO event_past (id, created_by_id, event_id, start_date_time, event_change_type, created_at) SELECT id, changed_by_person_id, event_id, changed_at_date_time, event_change_type, deleted_at FROM __temp__event_past');
        $this->addSql('DROP TABLE __temp__event_past');
        $this->addSql('CREATE INDEX IDX_4FDF0D2C71F7E88B ON event_past (event_id)');
        $this->addSql('CREATE INDEX IDX_4FDF0D2CB03A8386 ON event_past (created_by_id)');
        $this->addSql('CREATE INDEX IDX_4FDF0D2CEE85B337 ON event_past (last_changed_by_id)');
        $this->addSql('CREATE INDEX IDX_4FDF0D2C7597D3FE ON event_past (member_id)');
        $this->addSql('CREATE INDEX IDX_4FDF0D2C7887A021 ON event_past (frontend_user_id)');
        $this->addSql('CREATE INDEX IDX_4FDF0D2CC82CDCED ON event_past (event_line_id)');
        $this->addSql('CREATE INDEX IDX_4FDF0D2C1BDD81B ON event_past (generated_by_id)');
        $this->addSql('DROP INDEX IDX_70E4FA789E6B1585');
        $this->addSql('CREATE TEMPORARY TABLE __temp__member AS SELECT id, deleted_at, name, description, street, street_nr, address_line, postal_code, city, country, phone, email FROM member');
        $this->addSql('DROP TABLE member');
        $this->addSql('CREATE TABLE member (id INTEGER NOT NULL, deleted_at DATETIME DEFAULT NULL, name CLOB NOT NULL COLLATE BINARY, description CLOB DEFAULT NULL COLLATE BINARY, street CLOB DEFAULT NULL COLLATE BINARY, street_nr CLOB DEFAULT NULL COLLATE BINARY, address_line CLOB DEFAULT NULL COLLATE BINARY, postal_code INTEGER DEFAULT NULL, city CLOB DEFAULT NULL COLLATE BINARY, country CLOB DEFAULT NULL COLLATE BINARY, phone CLOB DEFAULT NULL COLLATE BINARY, email CLOB NOT NULL COLLATE BINARY, invitation_identifier CLOB DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('INSERT INTO member (id, deleted_at, name, description, street, street_nr, address_line, postal_code, city, country, phone, email) SELECT id, deleted_at, name, description, street, street_nr, address_line, postal_code, city, country, phone, email FROM __temp__member');
        $this->addSql('DROP TABLE __temp__member');
        $this->addSql('DROP INDEX IDX_CEDFF85D9E6B1585');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_line AS SELECT id, display_order, name, description FROM event_line');
        $this->addSql('DROP TABLE event_line');
        $this->addSql('CREATE TABLE event_line (id INTEGER NOT NULL, display_order INTEGER NOT NULL, name CLOB NOT NULL COLLATE BINARY, description CLOB DEFAULT NULL COLLATE BINARY, PRIMARY KEY(id))');
        $this->addSql('INSERT INTO event_line (id, display_order, name, description) SELECT id, display_order, name, description FROM __temp__event_line');
        $this->addSql('DROP TABLE __temp__event_line');
        $this->addSql('DROP INDEX UNIQ_AD8A54A9E7927C74');
        $this->addSql('CREATE TEMPORARY TABLE __temp__admin_user AS SELECT id, email, password_hash, reset_hash, is_active, registration_date, agb_accepted FROM admin_user');
        $this->addSql('DROP TABLE admin_user');
        $this->addSql('CREATE TABLE admin_user (id INTEGER NOT NULL, email CLOB NOT NULL COLLATE BINARY, password_hash CLOB NOT NULL COLLATE BINARY, reset_hash CLOB NOT NULL COLLATE BINARY, registration_date DATETIME NOT NULL, agb_accepted BOOLEAN DEFAULT \'0\' NOT NULL, is_enabled BOOLEAN NOT NULL, PRIMARY KEY(id))');
        $this->addSql('INSERT INTO admin_user (id, email, password_hash, reset_hash, is_enabled, registration_date, agb_accepted) SELECT id, email, password_hash, reset_hash, is_active, registration_date, agb_accepted FROM __temp__admin_user');
        $this->addSql('DROP TABLE __temp__admin_user');
        $this->addSql('CREATE UNIQUE INDEX UNIQ_AD8A54A9E7927C74 ON admin_user (email)');
        $this->addSql('DROP INDEX IDX_3BAE0AA71BDD81B');
        $this->addSql('DROP INDEX IDX_3BAE0AA7C82CDCED');
        $this->addSql('DROP INDEX IDX_3BAE0AA7217BBB47');
        $this->addSql('DROP INDEX IDX_3BAE0AA77597D3FE');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event AS SELECT id, member_id, person_id, event_line_id, generated_by_id, start_date_time, is_confirmed_date_time, end_date_time, trade_tag, last_remainder_email_sent, deleted_at FROM event');
        $this->addSql('DROP TABLE event');
        $this->addSql('CREATE TABLE event (id INTEGER NOT NULL, member_id INTEGER DEFAULT NULL, event_line_id INTEGER DEFAULT NULL, generated_by_id INTEGER DEFAULT NULL, frontend_user_id INTEGER DEFAULT NULL, start_date_time DATETIME NOT NULL, end_date_time DATETIME NOT NULL, trade_tag INTEGER NOT NULL, last_remainder_email_sent DATETIME DEFAULT NULL, deleted_at DATETIME DEFAULT NULL, confirm_date_time DATETIME DEFAULT NULL, event_type INTEGER NOT NULL, PRIMARY KEY(id), CONSTRAINT FK_3BAE0AA77597D3FE FOREIGN KEY (member_id) REFERENCES member (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_3BAE0AA77887A021 FOREIGN KEY (frontend_user_id) REFERENCES frontend_user (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_3BAE0AA7C82CDCED FOREIGN KEY (event_line_id) REFERENCES event_line (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_3BAE0AA71BDD81B FOREIGN KEY (generated_by_id) REFERENCES event_generation (id) NOT DEFERRABLE INITIALLY IMMEDIATE)');
        $this->addSql('INSERT INTO event (id, member_id, frontend_user_id, event_line_id, generated_by_id, start_date_time, confirm_date_time, end_date_time, trade_tag, last_remainder_email_sent, deleted_at) SELECT id, member_id, person_id, event_line_id, generated_by_id, start_date_time, is_confirmed_date_time, end_date_time, trade_tag, last_remainder_email_sent, deleted_at FROM __temp__event');
        $this->addSql('DROP TABLE __temp__event');
        $this->addSql('CREATE INDEX IDX_3BAE0AA71BDD81B ON event (generated_by_id)');
        $this->addSql('CREATE INDEX IDX_3BAE0AA7C82CDCED ON event (event_line_id)');
        $this->addSql('CREATE INDEX IDX_3BAE0AA77597D3FE ON event (member_id)');
        $this->addSql('CREATE INDEX IDX_3BAE0AA77887A021 ON event (frontend_user_id)');
    }

    public function down(Schema $schema)
    {
        // this down() migration is auto-generated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'sqlite', 'Migration can only be executed safely on \'sqlite\'.');

        $this->addSql('CREATE TABLE application_event (id INTEGER NOT NULL, organisation_id INTEGER DEFAULT NULL, application_event_type INTEGER NOT NULL, occurred_at_date_time DATETIME NOT NULL, deleted_at DATETIME DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_D83AEDDD9E6B1585 ON application_event (organisation_id)');
        $this->addSql('CREATE TABLE event_line_generation (id INTEGER NOT NULL, event_line_id INTEGER DEFAULT NULL, created_by_person_id INTEGER DEFAULT NULL, created_at_date_time DATETIME NOT NULL, applied BOOLEAN DEFAULT \'0\' NOT NULL, distribution_type INTEGER NOT NULL, distribution_configuration_json CLOB NOT NULL COLLATE BINARY, distribution_output_json CLOB NOT NULL COLLATE BINARY, generation_result_json CLOB NOT NULL COLLATE BINARY, deleted_at DATETIME DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_A44E1BE07B7EBE2A ON event_line_generation (created_by_person_id)');
        $this->addSql('CREATE INDEX IDX_A44E1BE0C82CDCED ON event_line_generation (event_line_id)');
        $this->addSql('CREATE TABLE invoice (id INTEGER NOT NULL, organisation_id INTEGER DEFAULT NULL, invoice_date_time DATETIME NOT NULL, payment_date_time DATETIME NOT NULL, payment_status INTEGER NOT NULL, invoice_type INTEGER NOT NULL, invoice_data_json CLOB NOT NULL COLLATE BINARY, deleted_at DATETIME DEFAULT NULL, street CLOB DEFAULT NULL COLLATE BINARY, street_nr CLOB DEFAULT NULL COLLATE BINARY, address_line CLOB DEFAULT NULL COLLATE BINARY, postal_code INTEGER DEFAULT NULL, city CLOB DEFAULT NULL COLLATE BINARY, country CLOB DEFAULT NULL COLLATE BINARY, name CLOB NOT NULL COLLATE BINARY, description CLOB DEFAULT NULL COLLATE BINARY, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_906517449E6B1585 ON invoice (organisation_id)');
        $this->addSql('CREATE TABLE newsletter (id INTEGER NOT NULL, choice INTEGER NOT NULL, message CLOB DEFAULT NULL COLLATE BINARY, job_title CLOB DEFAULT NULL COLLATE BINARY, given_name CLOB NOT NULL COLLATE BINARY, family_name CLOB NOT NULL COLLATE BINARY, phone CLOB DEFAULT NULL COLLATE BINARY, email CLOB NOT NULL COLLATE BINARY, webpage CLOB DEFAULT NULL COLLATE BINARY, deleted_at DATETIME DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE TABLE organisation (id INTEGER NOT NULL, is_active BOOLEAN NOT NULL, active_end DATETIME NOT NULL, name CLOB NOT NULL COLLATE BINARY, description CLOB DEFAULT NULL COLLATE BINARY, street CLOB DEFAULT NULL COLLATE BINARY, street_nr CLOB DEFAULT NULL COLLATE BINARY, address_line CLOB DEFAULT NULL COLLATE BINARY, postal_code INTEGER DEFAULT NULL, city CLOB DEFAULT NULL COLLATE BINARY, country CLOB DEFAULT NULL COLLATE BINARY, phone CLOB DEFAULT NULL COLLATE BINARY, email CLOB NOT NULL COLLATE BINARY, webpage CLOB DEFAULT NULL COLLATE BINARY, deleted_at DATETIME DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE TABLE organisation_person (organisation_id INTEGER NOT NULL, person_id INTEGER NOT NULL, PRIMARY KEY(organisation_id, person_id))');
        $this->addSql('CREATE INDEX IDX_B6C70B6B217BBB47 ON organisation_person (person_id)');
        $this->addSql('CREATE INDEX IDX_B6C70B6B9E6B1585 ON organisation_person (organisation_id)');
        $this->addSql('CREATE TABLE organisation_setting (id INTEGER NOT NULL, organisation_id INTEGER DEFAULT NULL, receiver_of_remainders_id INTEGER DEFAULT NULL, member_invite_email_subject CLOB DEFAULT NULL COLLATE BINARY, member_invite_email_message CLOB DEFAULT NULL COLLATE BINARY, person_invite_email_subject CLOB DEFAULT NULL COLLATE BINARY, person_invite_email_message CLOB DEFAULT NULL COLLATE BINARY, must_confirm_event_before_days INTEGER NOT NULL, can_confirm_event_before_days INTEGER DEFAULT NULL, send_confirm_event_email_days INTEGER DEFAULT NULL, trade_event_days INTEGER DEFAULT NULL, last_confirm_event_email_send DATETIME DEFAULT NULL, deleted_at DATETIME DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_FCF0CF9BFDFCFDB5 ON organisation_setting (receiver_of_remainders_id)');
        $this->addSql('CREATE UNIQUE INDEX UNIQ_FCF0CF9B9E6B1585 ON organisation_setting (organisation_id)');
        $this->addSql('CREATE TABLE person (id INTEGER NOT NULL, job_title CLOB DEFAULT NULL COLLATE BINARY, given_name CLOB NOT NULL COLLATE BINARY, family_name CLOB NOT NULL COLLATE BINARY, street CLOB DEFAULT NULL COLLATE BINARY, street_nr CLOB DEFAULT NULL COLLATE BINARY, address_line CLOB DEFAULT NULL COLLATE BINARY, postal_code INTEGER DEFAULT NULL, city CLOB DEFAULT NULL COLLATE BINARY, country CLOB DEFAULT NULL COLLATE BINARY, phone CLOB DEFAULT NULL COLLATE BINARY, email CLOB NOT NULL COLLATE BINARY, webpage CLOB DEFAULT NULL COLLATE BINARY, deleted_at DATETIME DEFAULT NULL, invitation_date_time DATETIME DEFAULT NULL, invitation_hash CLOB DEFAULT NULL COLLATE BINARY, PRIMARY KEY(id))');
        $this->addSql('CREATE TABLE setting (id INTEGER NOT NULL, frontend_user_id INTEGER DEFAULT NULL, "key" CLOB NOT NULL COLLATE BINARY, content CLOB NOT NULL COLLATE BINARY, deleted_at DATETIME DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_9F74B8987887A021 ON setting (frontend_user_id)');
        $this->addSql('DROP TABLE event_generation_date_exception');
        $this->addSql('DROP TABLE event_generation');
        $this->addSql('DROP TABLE event_offer_authorization');
        $this->addSql('DROP TABLE event_generation_member');
        $this->addSql('DROP TABLE event_generation_conflict_avoid');
        $this->addSql('DROP TABLE settings');
        $this->addSql('DROP TABLE event_generation_frontend_user');
        $this->addSql('DROP INDEX UNIQ_AD8A54A9E7927C74');
        $this->addSql('CREATE TEMPORARY TABLE __temp__admin_user AS SELECT id, email, password_hash, reset_hash, is_enabled, registration_date, agb_accepted FROM admin_user');
        $this->addSql('DROP TABLE admin_user');
        $this->addSql('CREATE TABLE admin_user (id INTEGER NOT NULL, email CLOB NOT NULL, password_hash CLOB NOT NULL, reset_hash CLOB NOT NULL, registration_date DATETIME NOT NULL, agb_accepted BOOLEAN DEFAULT \'0\' NOT NULL, is_active BOOLEAN NOT NULL, deleted_at DATETIME DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('INSERT INTO admin_user (id, email, password_hash, reset_hash, is_active, registration_date, agb_accepted) SELECT id, email, password_hash, reset_hash, is_enabled, registration_date, agb_accepted FROM __temp__admin_user');
        $this->addSql('DROP TABLE __temp__admin_user');
        $this->addSql('CREATE UNIQUE INDEX UNIQ_AD8A54A9E7927C74 ON admin_user (email)');
        $this->addSql('ALTER TABLE email ADD COLUMN deleted_at DATETIME DEFAULT NULL');
        $this->addSql('DROP INDEX IDX_3BAE0AA77597D3FE');
        $this->addSql('DROP INDEX IDX_3BAE0AA77887A021');
        $this->addSql('DROP INDEX IDX_3BAE0AA7C82CDCED');
        $this->addSql('DROP INDEX IDX_3BAE0AA71BDD81B');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event AS SELECT id, member_id, frontend_user_id, event_line_id, generated_by_id, confirm_date_time, last_remainder_email_sent, trade_tag, start_date_time, end_date_time, deleted_at FROM event');
        $this->addSql('DROP TABLE event');
        $this->addSql('CREATE TABLE event (id INTEGER NOT NULL, generated_by_id INTEGER DEFAULT NULL, member_id INTEGER DEFAULT NULL, event_line_id INTEGER DEFAULT NULL, last_remainder_email_sent DATETIME DEFAULT NULL, trade_tag INTEGER NOT NULL, start_date_time DATETIME NOT NULL, end_date_time DATETIME NOT NULL, deleted_at DATETIME DEFAULT NULL, person_id INTEGER DEFAULT NULL, is_confirmed_date_time DATETIME DEFAULT NULL, is_confirmed BOOLEAN DEFAULT \'0\' NOT NULL, PRIMARY KEY(id), CONSTRAINT FK_3BAE0AA71BDD81B FOREIGN KEY (generated_by_id) REFERENCES event_generation (id) NOT DEFERRABLE INITIALLY IMMEDIATE)');
        $this->addSql('INSERT INTO event (id, member_id, person_id, event_line_id, generated_by_id, is_confirmed_date_time, last_remainder_email_sent, trade_tag, start_date_time, end_date_time, deleted_at) SELECT id, member_id, frontend_user_id, event_line_id, generated_by_id, confirm_date_time, last_remainder_email_sent, trade_tag, start_date_time, end_date_time, deleted_at FROM __temp__event');
        $this->addSql('DROP TABLE __temp__event');
        $this->addSql('CREATE INDEX IDX_3BAE0AA77597D3FE ON event (member_id)');
        $this->addSql('CREATE INDEX IDX_3BAE0AA7C82CDCED ON event (event_line_id)');
        $this->addSql('CREATE INDEX IDX_3BAE0AA71BDD81B ON event (generated_by_id)');
        $this->addSql('CREATE INDEX IDX_3BAE0AA7217BBB47 ON event (person_id)');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_line AS SELECT id, display_order, name, description FROM event_line');
        $this->addSql('DROP TABLE event_line');
        $this->addSql('CREATE TABLE event_line (id INTEGER NOT NULL, display_order INTEGER NOT NULL, name CLOB NOT NULL, description CLOB DEFAULT NULL, organisation_id INTEGER DEFAULT NULL, deleted_at DATETIME DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('INSERT INTO event_line (id, display_order, name, description) SELECT id, display_order, name, description FROM __temp__event_line');
        $this->addSql('DROP TABLE __temp__event_line');
        $this->addSql('CREATE INDEX IDX_CEDFF85D9E6B1585 ON event_line (organisation_id)');
        $this->addSql('DROP INDEX IDX_68CD3612B03A8386');
        $this->addSql('DROP INDEX IDX_68CD3612EE85B337');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_offer AS SELECT id, message, status FROM event_offer');
        $this->addSql('DROP TABLE event_offer');
        $this->addSql('CREATE TABLE event_offer (id INTEGER NOT NULL, status INTEGER NOT NULL, description CLOB DEFAULT NULL COLLATE BINARY, offered_by_member_id INTEGER DEFAULT NULL, offered_by_person_id INTEGER DEFAULT NULL, offered_to_member_id INTEGER DEFAULT NULL, offered_to_person_id INTEGER DEFAULT NULL, create_date_time DATETIME NOT NULL, open_date_time DATETIME DEFAULT NULL, close_date_time DATETIME DEFAULT NULL, deleted_at DATETIME DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('INSERT INTO event_offer (id, description, status) SELECT id, message, status FROM __temp__event_offer');
        $this->addSql('DROP TABLE __temp__event_offer');
        $this->addSql('CREATE INDEX IDX_68CD36123D1B60F4 ON event_offer (offered_to_person_id)');
        $this->addSql('CREATE INDEX IDX_68CD361269F7084D ON event_offer (offered_to_member_id)');
        $this->addSql('CREATE INDEX IDX_68CD3612987D2660 ON event_offer (offered_by_person_id)');
        $this->addSql('CREATE INDEX IDX_68CD3612CC914ED9 ON event_offer (offered_by_member_id)');
        $this->addSql('DROP INDEX IDX_3853319152A9D3E');
        $this->addSql('DROP INDEX IDX_385331971F7E88B');
        $this->addSql('DROP INDEX IDX_3853319AC7E9E21');
        $this->addSql('DROP INDEX IDX_38533194123A1D2');
        $this->addSql('DROP INDEX IDX_38533192058366E');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_offer_entry AS SELECT id, event_offer_id, event_id FROM event_offer_entry');
        $this->addSql('DROP TABLE event_offer_entry');
        $this->addSql('CREATE TABLE event_offer_entry (id INTEGER NOT NULL, event_offer_id INTEGER DEFAULT NULL, event_id INTEGER DEFAULT NULL, deleted_at DATETIME DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('INSERT INTO event_offer_entry (id, event_offer_id, event_id) SELECT id, event_offer_id, event_id FROM __temp__event_offer_entry');
        $this->addSql('DROP TABLE __temp__event_offer_entry');
        $this->addSql('CREATE INDEX IDX_3853319152A9D3E ON event_offer_entry (event_offer_id)');
        $this->addSql('CREATE INDEX IDX_385331971F7E88B ON event_offer_entry (event_id)');
        $this->addSql('DROP INDEX IDX_4FDF0D2C71F7E88B');
        $this->addSql('DROP INDEX IDX_4FDF0D2CB03A8386');
        $this->addSql('DROP INDEX IDX_4FDF0D2CEE85B337');
        $this->addSql('DROP INDEX IDX_4FDF0D2C7597D3FE');
        $this->addSql('DROP INDEX IDX_4FDF0D2C7887A021');
        $this->addSql('DROP INDEX IDX_4FDF0D2CC82CDCED');
        $this->addSql('DROP INDEX IDX_4FDF0D2C1BDD81B');
        $this->addSql('CREATE TEMPORARY TABLE __temp__event_past AS SELECT id, event_id, event_change_type FROM event_past');
        $this->addSql('DROP TABLE event_past');
        $this->addSql('CREATE TABLE event_past (id INTEGER NOT NULL, event_id INTEGER DEFAULT NULL, event_change_type INTEGER NOT NULL, changed_by_person_id INTEGER DEFAULT NULL, changed_at_date_time DATETIME NOT NULL, before_event_json CLOB NOT NULL COLLATE BINARY, after_event_json CLOB NOT NULL COLLATE BINARY, deleted_at DATETIME DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('INSERT INTO event_past (id, event_id, event_change_type) SELECT id, event_id, event_change_type FROM __temp__event_past');
        $this->addSql('DROP TABLE __temp__event_past');
        $this->addSql('CREATE INDEX IDX_4FDF0D2C71F7E88B ON event_past (event_id)');
        $this->addSql('CREATE INDEX IDX_4FDF0D2C17ECF0EB ON event_past (changed_by_person_id)');
        $this->addSql('DROP INDEX UNIQ_E2D1DEAE7927C74');
        $this->addSql('CREATE TEMPORARY TABLE __temp__frontend_user AS SELECT id, email, password_hash, reset_hash, registration_date, agb_accepted, postal_code, deleted_at FROM frontend_user');
        $this->addSql('DROP TABLE frontend_user');
        $this->addSql('CREATE TABLE frontend_user (id INTEGER NOT NULL, email CLOB NOT NULL, password_hash CLOB NOT NULL, reset_hash CLOB NOT NULL, registration_date DATETIME NOT NULL, agb_accepted BOOLEAN DEFAULT \'0\' NOT NULL, deleted_at DATETIME DEFAULT NULL, person_id INTEGER DEFAULT NULL, is_active BOOLEAN NOT NULL, PRIMARY KEY(id))');
        $this->addSql('INSERT INTO frontend_user (id, email, password_hash, reset_hash, registration_date, agb_accepted, person_id, deleted_at) SELECT id, email, password_hash, reset_hash, registration_date, agb_accepted, postal_code, deleted_at FROM __temp__frontend_user');
        $this->addSql('DROP TABLE __temp__frontend_user');
        $this->addSql('CREATE UNIQUE INDEX UNIQ_E2D1DEAE7927C74 ON frontend_user (email)');
        $this->addSql('CREATE UNIQUE INDEX UNIQ_E2D1DEA217BBB47 ON frontend_user (person_id)');
        $this->addSql('CREATE TEMPORARY TABLE __temp__member AS SELECT id, name, description, street, street_nr, address_line, postal_code, city, country, phone, email, invitation_identifier, deleted_at FROM member');
        $this->addSql('DROP TABLE member');
        $this->addSql('CREATE TABLE member (id INTEGER NOT NULL, name CLOB NOT NULL, description CLOB DEFAULT NULL, street CLOB DEFAULT NULL, street_nr CLOB DEFAULT NULL, address_line CLOB DEFAULT NULL, postal_code INTEGER DEFAULT NULL, city CLOB DEFAULT NULL, country CLOB DEFAULT NULL, phone CLOB DEFAULT NULL, email CLOB NOT NULL, deleted_at DATETIME DEFAULT NULL, invitation_hash CLOB DEFAULT NULL COLLATE BINARY, organisation_id INTEGER DEFAULT NULL, invitation_date_time DATETIME DEFAULT NULL, webpage CLOB DEFAULT NULL COLLATE BINARY, PRIMARY KEY(id))');
        $this->addSql('INSERT INTO member (id, name, description, street, street_nr, address_line, postal_code, city, country, phone, email, invitation_hash, deleted_at) SELECT id, name, description, street, street_nr, address_line, postal_code, city, country, phone, email, invitation_identifier, deleted_at FROM __temp__member');
        $this->addSql('DROP TABLE __temp__member');
        $this->addSql('CREATE INDEX IDX_70E4FA789E6B1585 ON member (organisation_id)');
        $this->addSql('DROP INDEX IDX_673E61767887A021');
        $this->addSql('DROP INDEX IDX_673E61767597D3FE');
        $this->addSql('CREATE TEMPORARY TABLE __temp__person_members AS SELECT frontend_user_id, member_id FROM person_members');
        $this->addSql('DROP TABLE person_members');
        $this->addSql('CREATE TABLE person_members (member_id INTEGER NOT NULL, person_id INTEGER NOT NULL, PRIMARY KEY(person_id, member_id))');
        $this->addSql('INSERT INTO person_members (person_id, member_id) SELECT frontend_user_id, member_id FROM __temp__person_members');
        $this->addSql('DROP TABLE __temp__person_members');
        $this->addSql('CREATE INDEX IDX_673E61767597D3FE ON person_members (member_id)');
        $this->addSql('CREATE INDEX IDX_673E6176217BBB47 ON person_members (person_id)');
    }
}
