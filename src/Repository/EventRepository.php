<?php

/*
 * This file is part of the nodika project.
 *
 * (c) Florian Moser <git@famoser.ch>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace App\Repository;

use App\Entity\Event;
use App\Entity\EventTag;
use App\Entity\FrontendUser;
use App\Entity\Member;
use App\Model\Event\SearchModel;
use Doctrine\ORM\EntityRepository;

/**
 * EventRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EventRepository extends EntityRepository
{
    /**
     * @param SearchModel $searchModel
     *
     * @return Event[]
     */
    public function search(SearchModel $searchModel)
    {
        //construct query for each event line
        $qb = $this->getEntityManager()->createQueryBuilder()
            ->select('e')
            ->from('App:Event', 'e')
            ->join('e.eventTags', 'et')
            ->leftJoin('e.member', 'm')
            ->leftJoin('e.frontendUser', 'f');

        $qb->where("1 == 1");

        if ($searchModel->getStartDateTime() instanceof \DateTime) {
            $qb->andWhere('e.startDateTime > :startDateTime')
                ->setParameter('startDateTime', $searchModel->getStartDateTime());
        }

        if ($searchModel->getEndDateTime() instanceof \DateTime) {
            $qb->andWhere('e.endDateTime < :endDateTime')
                ->setParameter('endDateTime', $searchModel->getEndDateTime());
        }

        if ($searchModel->getMember() instanceof Member) {
            $qb->andWhere('m = :member')
                ->setParameter('member', $searchModel->getMember());
        }

        if ($searchModel->getMembers() != null) {
            $qb->andWhere("m in (:members)")
                ->setParameter("members", $searchModel->getMembers());
        }

        if ($searchModel->getEventTags() != null) {
            $qb->andWhere("et in (:eventTags)")
                ->setParameter("eventTags", $searchModel->getEventTags());
        }

        if ($searchModel->getFrontendUser() instanceof FrontendUser) {
            $qb->andWhere('f = :frontendUser')
                ->setParameter('frontendUser', $searchModel->getFrontendUser());
        }

        if ($searchModel->getIsConfirmed() != null) {
            if ($searchModel->getIsConfirmed()) {
                $qb->andWhere("e.confirmDateTime IS NOT NULL");
            } else {
                $qb->andWhere("e.confirmDateTime IS NULL");
            }
        }

        $qb->orderBy("e.startDateTime", $searchModel->isInvertOrder() ? "DESC" : "ASC");
        $qb->setMaxResults($searchModel->getMaxResults());

        return $qb->getQuery()->getResult();
    }
}
