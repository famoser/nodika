language: php
sudo: false

cache:
  directories:
    - $HOME/.composer/cache/files
    - $HOME/symfony-bridge/.phpunit
    - $HOME/.sonar/cache

env:
  global:
    - SYMFONY_PHPUNIT_DIR="$HOME/symfony-bridge/.phpunit"

matrix:
  fast_finish: true
  include:
    - php: 7.2
      env:
        - COVERAGE=true
    - php: nightly

  allow_failures:
    - php: nightly

before_install:
  - cp .env.travis .env
  - cp .env.travis .env.test
  - cp phpunit.xml.dist phpunit.xml
  - '[[ "$TRAVIS_PHP_VERSION" == "nightly" ]] || phpenv config-rm xdebug.ini'
  - composer self-update

install:
  - composer install --dev
  - ./vendor/bin/simple-phpunit install
  - chmod +x ./bin/console

before_script:
  # print versions just in case
  - php --version
  - php ./bin/console --version
  - php ./vendor/bin/simple-phpunit --version

  # check if travis fulfills symfony requirements
  - php ./vendor/bin/requirements-checker

script:
  # this checks that the source code follows the Symfony Code Syntax rules
  - '[[ "$TRAVIS_PHP_VERSION" == "nightly" ]] || ./vendor/bin/php-cs-fixer fix --diff --dry-run -v'
  # this checks that the YAML config files contain no syntax errors
  - ./bin/console lint:yaml config
  # this checks that the Twig template files contain no syntax errors
  - ./bin/console lint:twig templates
  # this checks that the XLIFF translations contain no syntax errors
  - ./bin/console lint:xliff translations
  # this checks that the application doesn't use dependencies with known security vulnerabilities
  - ./bin/console security:check
  # this checks that the composer.json and composer.lock files are valid
  - composer validate --strict
  # this checks that Doctrine's mapping configurations are valid
  - ./bin/console doctrine:schema:validate --skip-sync -vvv --no-interaction

  # this executes the phpunit tests
  - ./vendor/bin/simple-phpunit

after_script:
  - if [[ $COVERAGE == true ]]; then wget https://scrutinizer-ci.com/ocular.phar && php ocular.phar code-coverage:upload --format=php-clover ./build/logs/clover.xml; fi
  - if [[ $COVERAGE == true ]]; then bash <(curl -s https://codecov.io/bash); fi
