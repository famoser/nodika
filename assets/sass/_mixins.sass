// Mixin for creating animations using single or "all" property transitions
// @include transition(PROPERTY DURATION DELAY(OPT) TIMING-FUNCTION)
@mixin transition($transition)
  -webkit-transition: $transition
  -moz-transition: $transition
  -ms-transition: $transition
  -o-transition: $transition
  transition: $transition


// Draw an arrow pointing up. Can be called on element or pseudoelement.
// @include arrowUp(#fff, 2rem, 1rem)
@mixin arrowUp($color, $arrowWidth, $arrowHeight) 
  content: ''
  display: block
  width: 0
  height: 0
  border-bottom: $arrowHeight solid $color
  border-left: ($arrowWidth/2) solid transparent
  border-right: ($arrowWidth/2) solid transparent


// Draw an arrow pointing right. Can be called on element or pseudoelement.
// @include arrowRight(#fff, 1rem, 2rem)
@mixin arrowRight($color, $arrowWidth, $arrowHeight) 
  content: ''
  display: block
  width: 0
  height: 0
  border-left: $arrowWidth solid $color
  border-top: ($arrowHeight/2) solid transparent
  border-bottom: ($arrowHeight/2) solid transparent


// Draw an arrow pointing down. Can be called on element or pseudoelement.
// @include arrowDown(#fff, 2rem, 1rem)
@mixin arrowDown($color, $arrowWidth, $arrowHeight) 
  content: ''
  display: block
  width: 0
  height: 0
  border-top: $arrowHeight solid $color
  border-left: ($arrowWidth/2) solid transparent
  border-right: ($arrowWidth/2) solid transparent


// Draw an arrow pointing left. Can be called on element or pseudoelement.
// @include arrowRight(#fff, 1rem, 2rem)
@mixin arrowLeft($color, $arrowWidth, $arrowHeight) 
  content: ''
  display: block
  width: 0
  height: 0
  border-right: $arrowWidth solid $color
  border-top: ($arrowHeight/2) solid transparent
  border-bottom: ($arrowHeight/2) solid transparent


// Box shadow with value declarations
// @include drop-shadow(X-OFFSET, Y-OFFSET, BLUR, ALPHA)
@mixin drop-shadow($x-axis: 0, $y-axis: 1px, $blur: 2px, $alpha: 0.1) 
  -webkit-box-shadow: $x-axis $y-axis $blur rgba(0, 0, 0, $alpha)
  -moz-box-shadow: $x-axis $y-axis $blur rgba(0, 0, 0, $alpha)
  box-shadow: $x-axis $y-axis $blur rgba(0, 0, 0, $alpha)


// Variable-size rounded corners
// @include border-radius(INT, INT, INT, INT)
@mixin border-radius($topright: 0, $bottomright: 0, $bottomleft: 0, $topleft: 0) 
  -webkit-border-radius: $topleft $topright $bottomright $bottomleft
  -moz-border-radius: $topleft $topright $bottomright $bottomleft
  border-radius: $topleft $topright $bottomright $bottomleft
  background-clip: padding-box


// Box shadow with full shadow declaration
// @include box-shadow(SHADOW DELCARATION)
@mixin box-shadow($shadow: 0 1px 3px rgba(0,0,0,.25)) 
  -webkit-box-shadow: $shadow
  -moz-box-shadow: $shadow
  box-shadow: $shadow

@mixin shadow($shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.16))
  -webkit-box-shadow: $shadow
  -moz-box-shadow: $shadow
  box-shadow: $shadow


@mixin font-face($family, $path, $svg, $weight: normal, $style: normal)
  @font-face
    font-family: $family
    src: url('#{$path}.eot')
    src: url('#{$path}.eot?#iefix') format('embedded-opentype'), url('#{$path}.woff') format('woff'), url('#{$path}.ttf') format('truetype'), url('#{$path}.svg##{$svg}') format('svg')
    font-weight: $weight
    font-style: $style